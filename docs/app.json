[{"name":"app.R","content":"library(magrittr)\r\nlibrary(data.table)\r\n# library(ggplot2)\r\n# library(ncdf4)\r\n# library(lattice)\r\n# library(RColorBrewer)\r\n# library(raster)\r\nlibrary(googlesheets4)\r\nlibrary(shiny)\r\nlibrary(bslib)\r\n\r\nui <- page_sidebar(\r\n  title = \"Chiffres coup de poing\",\r\n  # sidebar = sidebar(\"Types de carte\", position = \"top\"),\r\n  helpText(\"\"),\r\n  sidebar = sidebar(radioButtons(\r\n    inputId = \"theme\",\r\n    label = \"ThÃ¨mes\",\r\n    choices = c(\"Loading...\" = \"\"),\r\n  )),  # Add some custom CSS for styling\r\n  tags$head(\r\n    tags$style(HTML(\"\r\n      .card {\r\n        margin: 10px;\r\n        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n        border-radius: 8px;\r\n        height: auto;  /* Make height auto to fit content */\r\n      }\r\n      .card-title {\r\n        font-size: 1.5em;\r\n      }\r\n      .card-body {\r\n        padding: 20px;\r\n      }\r\n      .card-container {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: space-between; /* Ensures cards take up available horizontal space */\r\n        gap: 20px;\r\n      }\r\n      .card-container .card {\r\n        flex: 1 1 300px;  /* Cards take up at least 300px width but can grow */\r\n        max-width: 500px;  /* Set a max width to prevent cards from becoming too wide */\r\n        min-height: 150px;  /* Ensure minimum height */\r\n      }\r\n      .main-content {\r\n        padding: 20px;\r\n      }\r\n    \"))\r\n  ),\r\n  # card(card_header(\"Fact 1\"),\r\n  #      \"Source\"),\r\n  # card(card_header(\"Fact 2\"),\r\n  #      \"Source\")\r\n  uiOutput(\"cards\")\r\n)\r\n\r\n# Define server logic ----\r\nserver <- function(input, output, session) {\r\n  # googlesheets4::gs4_auth()\r\n  \r\n  repo_owner = \"ValentinTheo\"\r\n  repo_name = \"Chiffres-coup-de-poing-data\"\r\n  branch = \"master\"\r\n  \r\n  dataset =\r\n    reactive({\r\n      data_path = paste(paste(\"https://raw.githubusercontent.com\",\r\n                              repo_owner,repo_name,branch,sep=\"/\"),\"/chiffres.csv\",sep=\"\")\r\n       read.csv(data_path)\r\n      })\r\n  \r\n  observe({\r\n    dataset = dataset()\r\n    req(dataset)  \r\n    updateRadioButtons(session, \"theme\", \r\n                       choices = unique(dataset$Theme))\r\n  })\r\n  \r\n  d <- reactive({\r\n    req(dataset)\r\n    req(input$theme)\r\n    # req(d)\r\n    data = dataset()\r\n    setDT(data)\r\n    data[Theme == input$theme]\r\n  })\r\n\r\n\r\n  output$cards = renderUI({\r\n    data = d()\r\n    div(class = \"card-container\",\r\n        lapply(1:nrow(data), function(i) {\r\n          div(class = \"card\",\r\n              div(class = \"card-body\",\r\n                  div(class = \"card-body\",\r\n                      h4(class = \"card-title\", data$Phrase[i]),\r\n                      p(class = \"card-text\", data$Source[i])\r\n                  )\r\n              )\r\n          )\r\n        })\r\n    )\r\n    # renderText({\r\n    # d()$Phrase\r\n  })\r\n  \r\n  \r\n  # output$data_table <- renderTable({\r\n  #   dataset()\r\n  # })\r\n}\r\n\r\n# Run the app ----\r\nshinyApp(ui = ui, server = server)\r\n","type":"text"}]
